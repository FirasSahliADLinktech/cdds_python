const long length = 3;

module test{
    typedef long my_long;
};


module my_module {
  struct Time {
    long sec;
    long usec;
  };
  struct Msg {
    long userID;
    string message;
  };

  typedef sequence<double> DoubleSeq;
  
  struct TimedDoubleSeq {
    Time tm;
    DoubleSeq data;
  };

  enum RETURN_VALUE {
    RETURN_OK,
    RETURN_FAILED
  };

  interface DataGetter {
    RETURN_VALUE getData(out TimedDoubleSeq data);
  };

  struct Inner {
    short short1;
    double double1;
  };
        
  typedef sequence<Inner> inner_struct;
        
  struct SequenceOfStruct_struct{
    long long1;
    inner_struct seq1;
  };

  typedef long basic_long;
    
  module module_NestedStruct{

    struct other_Inner{
      my_module::basic_long long1;
      double double1;
    };
        
    typedef other_Inner other_inner_struct;
        
    struct NestedStruct_struct{
      test::my_long long1;
      other_inner_struct inner1;
    };
        
    #pragma keylist NestedStruct_struct long1
  };

};